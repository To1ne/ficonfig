#!/usr/bin/ruby
require 'pp'

class String
  def undent
    gsub(/^.{#{slice(/^ +/).length}}/, '')
  end
end

module Ficonfig
  VERSION   = '0.1'
  INDENT    = '     '

  def Ficonfig.usage
    puts <<-EOS.undent
    ficonfig: #{VERSION}
       ifconfig beautified
  EOS
  end # def

  class Ficonfig::Fi
    def initialize(str)
      # Parse the string
      @name = str[/^[^\s:]+/]
      one_phy = '[\dA-Fa-f]{2}'
      @physical = str[/(?:#{one_phy}\:){5}#{one_phy}/]
    end # def

    def to_s
      text = "#{@name}\n"
      text += "#{INDENT} ether #{@physical}\n" if @physical
      text
    end # def

  end # class

  def Ficonfig.ficonfig
    plain = %x{"ifconfig"} # TODO other arguments to forward?
    # Split the interfaces
    ifs = []
    plain.split(/\n\S/).each do |ln|
      ifs << Fi.new(ln)
    end # each
    puts ifs.to_s
  end # def
end # module

# Parse some special arguments
case ARGV.first
when '-h', '--help', '--usage', '-\?', 'help'
  Ficonfig::usage
  exit 0
when '--version', '-v'
  puts ficonfig::VERSION
  exit 0
when nil
  Ficonfig::ficonfig
# TODO all other arguments use to configure interfaces
end

